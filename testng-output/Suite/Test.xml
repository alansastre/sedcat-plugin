<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="alan-K55A" name="Test" tests="77" failures="9" timestamp="26 Apr 2016 16:29:35 GMT" time="37.459" errors="0">
  <testcase name="testCrispInferenceDoubleArrayOnLimits_Above on testCrispInferenceDoubleArrayOnLimits_Above(es.unileon.sonarqube.sedcat.xfuzzy.QualityTests)" time="0.025" classname="es.unileon.sonarqube.sedcat.xfuzzy.QualityTests"/>
  <testcase name="testCrispInferenceDoubleArrayOnLimits_Under on testCrispInferenceDoubleArrayOnLimits_Under(es.unileon.sonarqube.sedcat.xfuzzy.QualityTests)" time="0.016" classname="es.unileon.sonarqube.sedcat.xfuzzy.QualityTests"/>
  <testcase name="testCrispInferenceDoubleArray on testCrispInferenceDoubleArray(es.unileon.sonarqube.sedcat.xfuzzy.QualityTests)" time="34.107" classname="es.unileon.sonarqube.sedcat.xfuzzy.QualityTests"/>
  <testcase name="testCrispInferenceDoubleArrayOnLimits_Above on testCrispInferenceDoubleArrayOnLimits_Above(es.unileon.sonarqube.sedcat.xfuzzy.ActionsTests)" time="0.026" classname="es.unileon.sonarqube.sedcat.xfuzzy.ActionsTests"/>
  <testcase name="testCrispInferenceDoubleArrayOnLimits_Under on testCrispInferenceDoubleArrayOnLimits_Under(es.unileon.sonarqube.sedcat.xfuzzy.ActionsTests)" time="0.009" classname="es.unileon.sonarqube.sedcat.xfuzzy.ActionsTests"/>
  <testcase name="testCrispInferenceDoubleArray on testCrispInferenceDoubleArray(es.unileon.sonarqube.sedcat.xfuzzy.ActionsTests)" time="0.008" classname="es.unileon.sonarqube.sedcat.xfuzzy.ActionsTests"/>
  <testcase name="testSaveMeasure on testSaveMeasure(es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests)" time="0.34" classname="es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests"/>
  <testcase name="testOutputMeasureStore on testOutputMeasureStore(es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests)" time="0.078" classname="es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetOk on testCheckOutputDataSetOk(es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests)" time="0.011" classname="es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetNotAllowedUnder on testCheckOutputDataSetNotAllowedUnder(es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests)" time="0.008" classname="es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetNotAllowedAbove on testCheckOutputDataSetNotAllowedAbove(es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests)" time="0.023" classname="es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetNull on testCheckOutputDataSetNull(es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetEmpty on testCheckOutputDataSetEmpty(es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.QualityMeasureStoreTests"/>
  <testcase name="testSaveMeasure on testSaveMeasure(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.219" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testOutputMeasureStore on testOutputMeasureStore(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.067" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetOk on testCheckOutputDataSetOk(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetNotAllowedUnder on testCheckOutputDataSetNotAllowedUnder(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetNotAllowedAbove on testCheckOutputDataSetNotAllowedAbove(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetNull on testCheckOutputDataSetNull(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testCheckOutputDataSetEmpty on testCheckOutputDataSetEmpty(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testloadPropertiesOk on testloadPropertiesOk(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testloadPropertiesNull on testloadPropertiesNull(es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests)" time="0.01" classname="es.unileon.sonarqube.sedcat.storage.ActionsMeasureStoreTests"/>
  <testcase name="testXfuzzyProcessState on testXfuzzyProcessState(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests">
    <skipped/>
  </testcase> <!-- testXfuzzyProcessState on testXfuzzyProcessState(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests) -->
  <testcase name="testCheckNotNullInputMetricsNull on testCheckNotNullInputMetricsNull(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests)" time="0.032" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests"/>
  <testcase name="testCheckNotNullInputMetricsOk on testCheckNotNullInputMetricsOk(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests">
    <failure type="java.lang.IllegalArgumentException" message="Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric &amp;apos;success_unit_tests&amp;apos; is not allowed.">
      <![CDATA[java.lang.IllegalArgumentException: Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric 'success_unit_tests' is not allowed.
	at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:148)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.validateAddMeasure(TestMeasureComputerContext.java:172)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.addMeasure(TestMeasureComputerContext.java:98)
	at es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests.testCheckNotNullInputMetricsOk(ExpertSystemActionsTests.java:137)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.contrib.java.lang.system.ExpectedSystemExit$1.evaluate(ExpectedSystemExit.java:130)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- testCheckNotNullInputMetricsOk on testCheckNotNullInputMetricsOk(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests) -->
  <testcase name="testExpertSystemActions on testExpertSystemActions(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests">
    <skipped/>
  </testcase> <!-- testExpertSystemActions on testExpertSystemActions(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests) -->
  <testcase name="testExtractValues on testExtractValues(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests">
    <failure type="java.lang.IllegalArgumentException" message="Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric &amp;apos;success_unit_tests&amp;apos; is not allowed.">
      <![CDATA[java.lang.IllegalArgumentException: Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric 'success_unit_tests' is not allowed.
	at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:148)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.validateAddMeasure(TestMeasureComputerContext.java:172)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.addMeasure(TestMeasureComputerContext.java:98)
	at es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests.testExtractValues(ExpertSystemActionsTests.java:112)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.contrib.java.lang.system.ExpectedSystemExit$1.evaluate(ExpectedSystemExit.java:130)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- testExtractValues on testExtractValues(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests) -->
  <testcase name="testXfuzzyProcessBehaviour on testXfuzzyProcessBehaviour(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests">
    <skipped/>
  </testcase> <!-- testXfuzzyProcessBehaviour on testXfuzzyProcessBehaviour(es.unileon.sonarqube.sedcat.strategies.ExpertSystemActionsTests) -->
  <testcase name="testExtractValues on testExtractValues(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests)" time="0.184" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests">
    <failure type="java.lang.IllegalArgumentException" message="Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric &amp;apos;success_unit_tests&amp;apos; is not allowed.">
      <![CDATA[java.lang.IllegalArgumentException: Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric 'success_unit_tests' is not allowed.
	at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:148)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.validateAddMeasure(TestMeasureComputerContext.java:172)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.addMeasure(TestMeasureComputerContext.java:98)
	at es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests.testExtractValues(ExpertSystemQualityTests.java:88)
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:310)
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:127)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$LastRuleTestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:148)
	at org.junit.contrib.java.lang.system.ExpectedSystemExit$1.evaluate(ExpectedSystemExit.java:130)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:91)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:122)
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:106)
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- testExtractValues on testExtractValues(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests) -->
  <testcase name="testCheckNotNullInputMetricsOk on testCheckNotNullInputMetricsOk(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests)" time="0.006" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests">
    <failure type="java.lang.IllegalArgumentException" message="Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric &amp;apos;success_unit_tests&amp;apos; is not allowed.">
      <![CDATA[java.lang.IllegalArgumentException: Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric 'success_unit_tests' is not allowed.
	at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:148)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.validateAddMeasure(TestMeasureComputerContext.java:172)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.addMeasure(TestMeasureComputerContext.java:98)
	at es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests.testCheckNotNullInputMetricsOk(ExpertSystemQualityTests.java:111)
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:310)
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:127)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$LastRuleTestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:148)
	at org.junit.contrib.java.lang.system.ExpectedSystemExit$1.evaluate(ExpectedSystemExit.java:130)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:91)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:122)
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:106)
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- testCheckNotNullInputMetricsOk on testCheckNotNullInputMetricsOk(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests) -->
  <testcase name="testCheckNotNullInputMetricsNull on testCheckNotNullInputMetricsNull(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests)" time="0.007" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests"/>
  <testcase name="testXfuzzyProcessBehaviour on testXfuzzyProcessBehaviour(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests)" time="0.006" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests">
    <failure type="java.lang.IllegalArgumentException" message="Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric &amp;apos;success_unit_tests&amp;apos; is not allowed.">
      <![CDATA[java.lang.IllegalArgumentException: Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric 'success_unit_tests' is not allowed.
	at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:148)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.validateAddMeasure(TestMeasureComputerContext.java:172)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.addMeasure(TestMeasureComputerContext.java:98)
	at es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests.testXfuzzyProcessBehaviour(ExpertSystemQualityTests.java:171)
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:310)
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:127)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$LastRuleTestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:148)
	at org.junit.contrib.java.lang.system.ExpectedSystemExit$1.evaluate(ExpectedSystemExit.java:130)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:91)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:122)
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:106)
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- testXfuzzyProcessBehaviour on testXfuzzyProcessBehaviour(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests) -->
  <testcase name="testXfuzzyProcessState on testXfuzzyProcessState(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests)" time="0.006" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests">
    <failure type="java.lang.IllegalArgumentException" message="Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric &amp;apos;success_unit_tests&amp;apos; is not allowed.">
      <![CDATA[java.lang.IllegalArgumentException: Only metrics in [quality_measure, actions_to_realize] can be used to add measures. Metric 'success_unit_tests' is not allowed.
	at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:148)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.validateAddMeasure(TestMeasureComputerContext.java:172)
	at org.sonar.api.ce.measure.test.TestMeasureComputerContext.addMeasure(TestMeasureComputerContext.java:98)
	at es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests.testXfuzzyProcessState(ExpertSystemQualityTests.java:212)
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:310)
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:127)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$LastRuleTestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:148)
	at org.junit.contrib.java.lang.system.ExpectedSystemExit$1.evaluate(ExpectedSystemExit.java:130)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:91)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)
	at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:122)
	at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:106)
	at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)
	at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- testXfuzzyProcessState on testXfuzzyProcessState(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests) -->
  <testcase name="testExpertSystemQuality on testExpertSystemQuality(es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests)" time="0.075" classname="es.unileon.sonarqube.sedcat.strategies.ExpertSystemQualityTests"/>
  <testcase name="testdefine_Correct_State on testdefine_Correct_State(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testdefine_Correct_State on testdefine_Correct_State(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testcompute_File_noExecution on testcompute_File_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testcompute_File_noExecution on testcompute_File_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testcompute_View_noExecution on testcompute_View_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testcompute_View_noExecution on testcompute_View_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testcompute_Subview_noExecution on testcompute_Subview_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testcompute_Subview_noExecution on testcompute_Subview_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testcompute_Directory_noExecution on testcompute_Directory_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testcompute_Directory_noExecution on testcompute_Directory_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testcompute_Module_noExecution on testcompute_Module_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testcompute_Module_noExecution on testcompute_Module_noExecution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testcompute_Project_Execution on testcompute_Project_Execution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testcompute_Project_Execution on testcompute_Project_Execution(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testcompute_Project_Behaviour on testcompute_Project_Behaviour(es.unileon.sonarqube.sedcat.start.GeneralComputerTests)" time="0.0" classname="es.unileon.sonarqube.sedcat.start.GeneralComputerTests">
    <skipped/>
  </testcase> <!-- testcompute_Project_Behaviour on testcompute_Project_Behaviour(es.unileon.sonarqube.sedcat.start.GeneralComputerTests) -->
  <testcase name="testGetMetrics on testGetMetrics(es.unileon.sonarqube.sedcat.start.SedcatMetricsTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.start.SedcatMetricsTests"/>
  <testcase name="testGetExtensions on testGetExtensions(es.unileon.sonarqube.sedcat.start.SedcatPluginTests)" time="0.005" classname="es.unileon.sonarqube.sedcat.start.SedcatPluginTests"/>
  <testcase name="compute_notNull_Measure on compute_notNull_Measure(es.unileon.sonarqube.sedcat.scanners.CoverageUnitTestsComputerTests)" time="0.019" classname="es.unileon.sonarqube.sedcat.scanners.CoverageUnitTestsComputerTests"/>
  <testcase name="compute_Null_Measure on compute_Null_Measure(es.unileon.sonarqube.sedcat.scanners.CoverageUnitTestsComputerTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.CoverageUnitTestsComputerTests"/>
  <testcase name="define_Correct_State on define_Correct_State(es.unileon.sonarqube.sedcat.scanners.CoverageUnitTestsComputerTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.scanners.CoverageUnitTestsComputerTests"/>
  <testcase name="testAnalyseWithNullReport on testAnalyseWithNullReport(es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests)" time="0.061" classname="es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests"/>
  <testcase name="testAnalyseWithReportParserNull on testAnalyseWithReportParserNull(es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests"/>
  <testcase name="testAnalyseWithMultipleReport on testAnalyseWithMultipleReport(es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests)" time="0.209" classname="es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests"/>
  <testcase name="testAnalyseWithReport on testAnalyseWithReport(es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.MutationsCoverageSensorTests"/>
  <testcase name="findReportDirectoryWithDirectoriesAndNoReport on findReportDirectoryWithDirectoriesAndNoReport(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests"/>
  <testcase name="findReportNotDirectory on findReportNotDirectory(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.017" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests"/>
  <testcase name="findReportNullDirectory on findReportNullDirectory(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests"/>
  <testcase name="findReportDirectoryWithDirectoriesAndReport on findReportDirectoryWithDirectoriesAndReport(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.005" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests">
    <failure type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertNotNull(Assert.java:712)
	at org.junit.Assert.assertNotNull(Assert.java:722)
	at es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests.findReportDirectoryWithDirectoriesAndReport(MutationsReportFinderTests.java:158)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- findReportDirectoryWithDirectoriesAndReport on findReportDirectoryWithDirectoriesAndReport(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests) -->
  <testcase name="findReportDirectoryNotExists on findReportDirectoryNotExists(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests"/>
  <testcase name="findReportEmptyDirectory on findReportEmptyDirectory(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests"/>
  <testcase name="findReportNull on findReportNull(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests"/>
  <testcase name="findReportDirectoryWithDirectoriesAndEmptyReport on findReportDirectoryWithDirectoriesAndEmptyReport(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests.findReportDirectoryWithDirectoriesAndEmptyReport(MutationsReportFinderTests.java:179)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- findReportDirectoryWithDirectoriesAndEmptyReport on findReportDirectoryWithDirectoriesAndEmptyReport(es.unileon.sonarqube.sedcat.scanners.MutationsReportFinderTests) -->
  <testcase name="parseReportWithNotEnoughTdElements on parseReportWithNotEnoughTdElements(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="parseReportWithCoverageLedgendButNotText on parseReportWithCoverageLedgendButNotText(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="parseReportOk on parseReportOk(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.005" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests">
    <failure type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertNotNull(Assert.java:712)
	at org.junit.Assert.assertNotNull(Assert.java:722)
	at es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests.parseReportOk(MutationsReportParserTests.java:147)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- parseReportOk on parseReportOk(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests) -->
  <testcase name="parseReportEmpty on parseReportEmpty(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="parseReportDirectory on parseReportDirectory(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="parseReportWithoutTdElements on parseReportWithoutTdElements(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="parseReportNull on parseReportNull(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="parseReportNotExists on parseReportNotExists(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="parseReportWithoutCoverageLedgend on parseReportWithoutCoverageLedgend(es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests)" time="0.002" classname="es.unileon.sonarqube.sedcat.scanners.MutationsReportParserTests"/>
  <testcase name="compute_notNull_Measure_File on compute_notNull_Measure_File(es.unileon.sonarqube.sedcat.scanners.NumberCodeLinesComputerTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.NumberCodeLinesComputerTests"/>
  <testcase name="compute_Null_Measure on compute_Null_Measure(es.unileon.sonarqube.sedcat.scanners.NumberCodeLinesComputerTests)" time="0.005" classname="es.unileon.sonarqube.sedcat.scanners.NumberCodeLinesComputerTests"/>
  <testcase name="define_Correct_State on define_Correct_State(es.unileon.sonarqube.sedcat.scanners.NumberCodeLinesComputerTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.NumberCodeLinesComputerTests"/>
  <testcase name="compute_notNull_Measure on compute_notNull_Measure(es.unileon.sonarqube.sedcat.scanners.NumberTestsComputerTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.NumberTestsComputerTests"/>
  <testcase name="compute_Null_Measure on compute_Null_Measure(es.unileon.sonarqube.sedcat.scanners.NumberTestsComputerTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.NumberTestsComputerTests"/>
  <testcase name="define_Correct_State on define_Correct_State(es.unileon.sonarqube.sedcat.scanners.NumberTestsComputerTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.NumberTestsComputerTests"/>
  <testcase name="compute_notNull_Measure on compute_notNull_Measure(es.unileon.sonarqube.sedcat.scanners.SuccessUnitTestsComputerTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.SuccessUnitTestsComputerTests"/>
  <testcase name="compute_Null_Measure on compute_Null_Measure(es.unileon.sonarqube.sedcat.scanners.SuccessUnitTestsComputerTests)" time="0.004" classname="es.unileon.sonarqube.sedcat.scanners.SuccessUnitTestsComputerTests"/>
  <testcase name="define_Correct_State on define_Correct_State(es.unileon.sonarqube.sedcat.scanners.SuccessUnitTestsComputerTests)" time="0.003" classname="es.unileon.sonarqube.sedcat.scanners.SuccessUnitTestsComputerTests"/>
</testsuite> <!-- Test -->
